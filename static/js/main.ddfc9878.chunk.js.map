{"version":3,"sources":["Button.jsx","HeadingDisplay.jsx","HeadingControls.jsx","App.js","serviceWorker.js","index.js"],"names":["Button","props","capsDisplay","capsBoolean","caps","react_default","a","createElement","className","onClick","clickHandler","headingVal","concat","type","style","backgroundColor","color","marginRight","fontColor","buttonContent","marginLeft","HeadingDisplay","state","heading1","heading2","heading3","HeadingControls","src_Button","increaseHeading","decreaseHeading","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","temp","getTemperature","bind","assertThisInitialized","heading","_this2","setState","defineProperty","_this3","display","marginTop","paddingLeft","width","margin","src_HeadingControls","resetHeading","src_HeadingDisplay","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ddfc9878.chunk.js","sourcesContent":["import React from 'react';\n\nconst Button = (props) => {\n  var onClickHandler = () => {\n    // console.log(this);\n    if (props.clickHandler && props.headingVal) {\n      props.clickHandler(props.headingVal);\n    } else if (props.clickHandler && !props.headingVal) {\n      props.clickHandler();\n    }\n  };\n\n  let capsDisplay = '2px';\n\n  let capsBoolean = true;\n  if (props.caps === 'false') {\n    capsBoolean = false;\n  }\n\n  if (capsBoolean === true) {\n    capsDisplay = '2px';\n  } else {\n    capsDisplay = '0px';\n  }\n\n  return (\n    <div className={'button'} onClick={onClickHandler}>\n      <div\n        className={`${props.type}-button-cap-left`}\n        style={{\n          backgroundColor: `${props.color}`,\n          color: `${props.color}`,\n          marginRight: `${capsDisplay}`,\n        }}\n      >\n        _\n      </div>\n      <div\n        className={`${props.type}-button`}\n        style={{\n          backgroundColor: `${props.color}`,\n          color: `${props.fontColor}`,\n        }}\n      >\n        {props.buttonContent}\n      </div>\n      <div\n        className={`${props.type}-button-cap-right`}\n        style={{\n          backgroundColor: `${props.color}`,\n          color: `${props.color}`,\n          marginLeft: `${capsDisplay}`,\n        }}\n      >\n        _\n      </div>\n    </div>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nconst HeadingDisplay = (props) => (\n  <h2 className={'heading'}>\n    <div className={'headingNum heading-1'}>{props.state.heading1}</div>.\n    <div className={'headingNum heading-2'}>{props.state.heading2}</div>.\n    <div className={'headingNum heading-3'}>{props.state.heading3}</div>\n  </h2>\n);\n\nexport default HeadingDisplay;\n","import React from 'react';\nimport Button from './Button.jsx';\n\nconst HeadingControls = (props) => (\n  <div>\n    <h3 className=\"heading-controls-title\">Heading Controls</h3>\n    <div className={'row'}>\n      <div className={'col-sm-6'}>\n        <Button\n          type={'md'}\n          buttonContent={'X +'}\n          color={'orange'}\n          clickHandler={props.increaseHeading}\n          headingVal={'heading1'}\n          caps={'false'}\n        />\n      </div>\n      <div className={'col-sm-6'}>\n        <Button\n          type={'md'}\n          buttonContent={'X -'}\n          color={'orange'}\n          clickHandler={props.decreaseHeading}\n          headingVal={'heading1'}\n          caps={'false'}\n        />\n      </div>\n      <div className={'col-sm-6'}>\n        <Button\n          type={'md'}\n          buttonContent={'Y +'}\n          color={'orange'}\n          clickHandler={props.increaseHeading}\n          headingVal={'heading2'}\n          caps={'false'}\n        />\n      </div>\n      <div className={'col-sm-6'}>\n        <Button\n          type={'md'}\n          buttonContent={'Y -'}\n          color={'orange'}\n          clickHandler={props.decreaseHeading}\n          headingVal={'heading2'}\n          caps={'false'}\n        />\n      </div>\n      <div className={'col-sm-6'}>\n        <Button\n          type={'md'}\n          buttonContent={'Z +'}\n          color={'orange'}\n          clickHandler={props.increaseHeading}\n          headingVal={'heading3'}\n          caps={'false'}\n        />\n      </div>\n      <div className={'col-sm-6'}>\n        <Button\n          type={'md'}\n          buttonContent={'Z -'}\n          color={'orange'}\n          clickHandler={props.decreaseHeading}\n          headingVal={'heading3'}\n          caps={'false'}\n        />\n      </div>\n    </div>\n  </div>\n);\n\nexport default HeadingControls;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Button from './Button.jsx';\nimport Cap from './Cap.jsx';\nimport HeadingDisplay from './HeadingDisplay.jsx';\nimport HeadingControls from './HeadingControls.jsx';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      heading1: 0,\n      heading2: 0,\n      heading3: 0,\n      temp: 0,\n    };\n\n    this.getTemperature = this.getTemperature.bind(this);\n  }\n\n  increaseHeading(heading) {\n    this.setState((state) => ({\n      [heading]: this.state[heading] + 1,\n    }));\n    // console.log(this.state, this.state[heading]);\n  }\n\n  decreaseHeading(heading) {\n    this.setState((state) => ({\n      [heading]: this.state[heading] - 1,\n    }));\n    // console.log(this.state, this.state[heading]);\n  }\n\n  resetHeading() {\n    this.setState((state) => ({\n      heading1: 0,\n      heading2: 0,\n      heading3: 0,\n    }));\n  }\n\n  getTemperature() {\n    // let celTemp = E.getTemperature();\n    // let normalTemp = Math.round(celTemp * 1.8 + 32);\n    // return normalTemp;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"page-title-header\">\n          <div className=\"top-left-title-cap\" />\n          <div className=\"page-title-container\">\n            <h1 style={{ display: 'inline' }} className=\"page-title\">\n              LCARS Web Interface\n            </h1>\n          </div>\n          <div className=\"top-right-title-cap\" />\n        </div>\n        <div className=\"row\" style={{ marginTop: '5px' }}>\n          <div\n            style={{ paddingLeft: '0px', width: '20px', marginTop: '0px' }}\n            className=\"col-md-1\"\n          >\n            <div className=\"header-to-body-connector\" />\n          </div>\n          {/* First row */}\n          <div className=\"col-md-4 column\">\n            <Button type={'md'} buttonContent={'4586'} color={'orange'} />\n            <Button type={'md'} buttonContent={'458263'} color={'tan'} />\n            <Button type={'md'} buttonContent={'7552831'} color={'orange'} />\n            <h2>Temperature Readings: {this.state.temp}</h2>\n            <Button\n              type={'md'}\n              buttonContent={'Temperature'}\n              color={'orange'}\n              clickHandler={this.getTemperature}\n            />\n            <div style={{ width: '50%', margin: 'auto' }}>\n              <HeadingControls\n                increaseHeading={this.increaseHeading.bind(this)}\n                decreaseHeading={this.decreaseHeading.bind(this)}\n              />\n            </div>\n            <Button\n              type={'md'}\n              buttonContent={'Reset'}\n              color={'tan'}\n              caps={'false'}\n              clickHandler={this.resetHeading.bind(this)}\n            />\n          </div>\n          {/* Second row */}\n          <div className=\"col-md-3 column\">\n            <h2>Heading:</h2>\n            <HeadingDisplay state={this.state} />\n            <div className=\"row\" style={{ width: '80%', margin: 'auto' }}>\n              <div className=\"col-sm-6\">\n                <Button type={'md'} buttonContent={'4586'} color={'orange'} />\n                <Button type={'md'} buttonContent={'458263'} color={'tan'} />\n                <Button\n                  type={'md'}\n                  buttonContent={'7552831'}\n                  color={'orange'}\n                />\n              </div>\n              <div className=\"col-sm-6\">\n                <Button type={'md'} buttonContent={'4586'} color={'orange'} />\n                <Button type={'md'} buttonContent={'458263'} color={'tan'} />\n                <Button\n                  type={'md'}\n                  buttonContent={'7552831'}\n                  color={'orange'}\n                />\n              </div>\n            </div>\n          </div>\n          {/* Third row */}\n          <div className=\"col-md-3 column\">\n            <Button\n              type={'md'}\n              buttonContent={'Engage Warp Speed'}\n              color={'lightblue'}\n              fontColor={'black'}\n            />\n            <Button\n              type={'md'}\n              buttonContent={'Engage Impulse Engines'}\n              color={'tan'}\n              fontColor={'black'}\n            />\n            <div className=\"row\" style={{ width: '80%', margin: 'auto' }}>\n              <div className=\"col-sm-6\">\n                <Button type={'md'} buttonContent={'4586'} color={'orange'} />\n                <Button type={'md'} buttonContent={'458263'} color={'tan'} />\n                <Button\n                  type={'md'}\n                  buttonContent={'7552831'}\n                  color={'orange'}\n                />\n              </div>\n              <div className=\"col-sm-6\">\n                <Button type={'md'} buttonContent={'4586'} color={'orange'} />\n                <Button type={'md'} buttonContent={'458263'} color={'tan'} />\n                <Button\n                  type={'md'}\n                  buttonContent={'7552831'}\n                  color={'orange'}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}